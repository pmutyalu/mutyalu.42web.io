# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

            - name: PHP Code Sniffer (php-actions)
  # You may pin to the exact commit or the version.
  # uses: php-actions/phpcs@dfdd77a6edfc6d0d0f194bdf0c934c8d841ea2fa
  uses: php-actions/phpcs@v1.0.0
  with:
    # What version of PHPCS to use
    version: # optional, default is latest
    # What version of PHP to use
    php_version: # optional, default is latest
    # Path to a vendored phpcs binary
    vendored_phpcs_path: # optional
    # One or more files and/or directories to check
    path: 
    # The name or path of the coding standard to use
    standard: 
    # A comma separated list of sniff codes to include checking (all sniffs must be part of the specified standard)
    sniffs: # optional
    # A comma separated list of sniff codes to exclude from checking (all sniffs must be part of the specified standard)
    exclude: # optional
    # A comma separated list of patterns to ignore files and directories
    ignore: # optional
    # The number of spaces each tab represents
    tab_width: # optional
    # Print either the "full", "xml", "checkstyle", "csv", "json", "junit", "emacs", "source", "summary", "diff", "svnblame", "gitblame", "hgblame" or "notifysend" report, or specify the path to a custom report class, (the "full" report is printed by default)
    report: # default is full
    # Write the report to the specified file path
    report_file: # optional
    # How many columns wide screen reports should be printed or set to "auto" to use current screen width, where supported
    report_width: # optional
    # A path to strip from the front of file paths inside reports
    basepath: # optional
    # A comma separated list of files to run before processing begins
    bootstrap: # optional
    # The encoding of the files being checked (default is utf-8)
    encoding: # optional
    # A comma separated list of file extensions to check. The type of the file can be specified using: ext/type e.g., module/php,es/js
    extensions: # optional
    # The minimum severity required to display an error or warning
    severity: # optional
    # The minimum severity required to display an error
    error_severity: # optional
    # The minimum severity required to display a warning
    warning_severity: # optional
    # Extra arguments to pass to the phpcs binary
    args: # optional
          




            - name: MySQL Deploy Action
  # You may pin to the exact commit or the version.
  # uses: calxus/mysql-deploy-action@54af3465f56d1b95c27c520f3b84693b3646ab0b
  uses: calxus/mysql-deploy-action@v2
  with:
    # Hostname used to connect to database
    DATABASE_HOST: 
    # Port used to connect to database
    DATABASE_PORT: # optional, default is 3306
    # Name of database to connect to
    DATABASE_NAME: 
    # Username used to connect to database
    DATABASE_USERNAME: 
    # Password used to connect to database
    DATABASE_PASSWORD: 
    # Script run on database
    DATABASE_SCRIPT: 
          




  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
